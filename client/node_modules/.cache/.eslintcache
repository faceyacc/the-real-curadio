[{"/Users/ty/projects/curadio/client/src/index.js":"1","/Users/ty/projects/curadio/client/src/reportWebVitals.js":"2","/Users/ty/projects/curadio/client/src/App.js":"3","/Users/ty/projects/curadio/client/src/spotify.js":"4","/Users/ty/projects/curadio/client/src/utils.js":"5","/Users/ty/projects/curadio/client/src/pages/Artist.js":"6","/Users/ty/projects/curadio/client/src/pages/index.js":"7","/Users/ty/projects/curadio/client/src/styles/index.js":"8","/Users/ty/projects/curadio/client/src/components/Playlist.js":"9","/Users/ty/projects/curadio/client/src/pages/Start.js":"10","/Users/ty/projects/curadio/client/src/pages/Login.js":"11","/Users/ty/projects/curadio/client/src/pages/Form.js":"12","/Users/ty/projects/curadio/client/src/pages/Home.js":"13","/Users/ty/projects/curadio/client/src/styles/StyledGrid.js":"14","/Users/ty/projects/curadio/client/src/styles/GlobalStyle.js":"15","/Users/ty/projects/curadio/client/src/styles/StyledSection.js":"16","/Users/ty/projects/curadio/client/src/styles/StyledHeader.js":"17","/Users/ty/projects/curadio/client/src/styles/StyledTrackList.js":"18","/Users/ty/projects/curadio/client/src/components/index.js":"19","/Users/ty/projects/curadio/client/src/styles/fonts.js":"20","/Users/ty/projects/curadio/client/src/styles/variables.js":"21","/Users/ty/projects/curadio/client/src/components/SectionWrapper.js":"22","/Users/ty/projects/curadio/client/src/components/Header.js":"23"},{"size":536,"mtime":1678651670783,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1678651670784,"results":"26","hashOfConfig":"25"},{"size":2579,"mtime":1678651670782,"results":"27","hashOfConfig":"25"},{"size":4896,"mtime":1678651670800,"results":"28","hashOfConfig":"25"},{"size":283,"mtime":1678651670814,"results":"29","hashOfConfig":"25"},{"size":403,"mtime":1678651670783,"results":"30","hashOfConfig":"25"},{"size":273,"mtime":1678651670784,"results":"31","hashOfConfig":"25"},{"size":294,"mtime":1678651670814,"results":"32","hashOfConfig":"25"},{"size":2291,"mtime":1678651670782,"results":"33","hashOfConfig":"25"},{"size":1741,"mtime":1678651670784,"results":"34","hashOfConfig":"25"},{"size":1856,"mtime":1678651670784,"results":"35","hashOfConfig":"25"},{"size":5396,"mtime":1678651670783,"results":"36","hashOfConfig":"25"},{"size":1971,"mtime":1678651670784,"results":"37","hashOfConfig":"25"},{"size":1556,"mtime":1678651670800,"results":"38","hashOfConfig":"25"},{"size":2337,"mtime":1678651670800,"results":"39","hashOfConfig":"25"},{"size":1190,"mtime":1678651670801,"results":"40","hashOfConfig":"25"},{"size":2249,"mtime":1678651670800,"results":"41","hashOfConfig":"25"},{"size":1721,"mtime":1678651670801,"results":"42","hashOfConfig":"25"},{"size":155,"mtime":1678651670782,"results":"43","hashOfConfig":"25"},{"size":834,"mtime":1678651670814,"results":"44","hashOfConfig":"25"},{"size":770,"mtime":1678651670814,"results":"45","hashOfConfig":"25"},{"size":890,"mtime":1678651670782,"results":"46","hashOfConfig":"25"},{"size":929,"mtime":1678651670782,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hdd3ly",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ty/projects/curadio/client/src/index.js",[],[],"/Users/ty/projects/curadio/client/src/reportWebVitals.js",[],[],"/Users/ty/projects/curadio/client/src/App.js",["123"],[],"import { useState, useEffect } from 'react'\nimport { accessToken, logout, getCurrentUserProfile } from './spotify'\nimport styled from 'styled-components/macro';\nimport { GlobalStyle } from './styles'\nimport { catchErrors } from './utils'\nimport {BrowserRouter as Router,\n  Routes,\n  useLocation,\n  Route\n} from \"react-router-dom\";\nimport { Start, Form, Login, Home, Playlist } from './pages';\nimport Artist from './pages/Artist';\n\n\n\nconst StyledLogoutButton = styled.button`\n  position: absolute;\n  top: 37px;\n  right: var(--spacing-md);\n  padding: var(--spacing-xs) var(--spacing-sm);\n  background-color: rgba(0,0,0,.7);\n  color: var(--white);\n  font-size: var(--fz-sm);\n  font-weight: 700;\n  border-radius: var(--border-radius-pill);\n  z-index: 10;\n  @media (min-width: 768px) {\n    right: var(--spacing-lg);\n  }\n`;\n\n\n\n\n// Scroll to top of page when changing routes\n// https://reactrouter.com/web/guides/scroll-restoration/scroll-to-top\nfunction ScrollToTop() { \n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0,0);\n  }, [pathname]);\n}\n\nfunction App() {\n  const [token, setToken] = useState(null)\n  const [profile, setProfile] = useState(null)\n\n  useEffect(() => {\n    setToken(accessToken);\n\n    const fetchData = async () => {      \n      const { data } = await getCurrentUserProfile();\n      setProfile(data);\n    }\n\n    catchErrors(fetchData())\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <header className=\"App-header\">              \n        {!token ? (          \n          <Login/>\n        ) : (\n          <>\n            <StyledLogoutButton onClick={logout}>Log Out</StyledLogoutButton>\n            <Router>\n              <ScrollToTop />\n              <Routes>\n                \n                <Route path=\"/start\" element={ <Start/> }></Route>\n\n                <Route path=\"/playlist\" element={ <Playlist/> }></Route>\n\n                <Route path=\"/artist\" element={ <Artist/> }></Route>\n\n                <Route path=\"/forms\" element={ <Form/> }></Route>                          \n\n                <Route path=\"/top-artists\" element={<h1>Top Artists</h1>}></Route>\n\n                <Route path=\"/top-tracks\" element={<h1>Top Tracks</h1>}></Route>\n\n                <Route path=\"/playlists/:id\" element={<h1>Playlists</h1>}></Route>\n\n                <Route path=\"/playlists/\" element={<h1>Playlists</h1>}></Route>\n      \n                <Route path=\"/\" element={ <Home/> }></Route>\n              </Routes> \n            </Router>\n          </>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;","/Users/ty/projects/curadio/client/src/spotify.js",[],[],"/Users/ty/projects/curadio/client/src/utils.js",[],[],"/Users/ty/projects/curadio/client/src/pages/Artist.js",["124","125"],[],"import { Header } from \"../components\"\nimport Playlist from '../components/Playlist';\nimport { useLocation } from 'react-router-dom'\nimport { useEffect } from \"react\";\n\n\nconst Artist = (props) => {\n    const { state } = useLocation();\n\n    console.log(state);\n    \n    return (\n        <>\n            <Header />\n            {/* <Playlist artists={songs} /> */}\n        </>\n    )\n}\n\nexport default Artist","/Users/ty/projects/curadio/client/src/pages/index.js",[],[],"/Users/ty/projects/curadio/client/src/styles/index.js",[],[],"/Users/ty/projects/curadio/client/src/components/Playlist.js",["126"],[],"import { StyledTrackList } from \"../styles\";\nimport styled from \"styled-components/macro\";\n\nconst StyledButton = styled.button`\n  font-size: 1em;\n  margin-top: 1rem;\n  border: 2px solid purple;\n  border-radius: 3px;\n`;\n\nconst Playlist = ({ artists }) => {\n  const artistsList = [];\n\n  artists.map((artist) => {\n    if (artist.data.tracks.items.length === 0) {\n      console.error(\"CANNOT FIND SONG!\", artist);\n    } else {\n      artistsList.push(artist);\n      console.log(\"FOUND ARTIST\", artistsList);\n    }\n  });\n\n  return (\n    <>\n      {artistsList ? (\n        <StyledTrackList>\n          {artistsList.map((artist, i) => (\n            <li className=\"track__item\" key={i}>\n              <div className=\"track__item__num\">{i + 1}</div>\n              <div className=\"track__item__title-group\">\n                {artist.data.tracks.items[0].album.images.length &&\n                  artist.data.tracks.items[0].album.images[2] && (\n                    <div className=\"track__item__img\">\n                      <img\n                        src={artist.data.tracks.items[0].album.images[2].url}\n                        alt=\"track not available\"\n                      />\n                    </div>\n                  )}\n                <div className=\"track__item__name-artist\">\n                  <div className=\"track__item__name track__item__artist\">\n                    {artist.data.tracks.items[0].name}\n                  </div>\n                  <div className=\"track__item__artist overflow-ellipsis\">\n                    <span key={i}>\n                      {artist.data.tracks.items[0].artists[0].name}{\" \"}\n                      {/*{i !== artist.data.tracks.items[0].artists.length - 1 && ','}*/}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"track__item__album overflow-ellipsis\">\n                {artist.data.tracks.items[0].name}\n              </div>\n            </li>\n          ))}\n          <a href=\"http://localhost:8889/login\">\n          <StyledButton className=\"dashboard_button\">\n            Go to Dashboard\n          </StyledButton>\n          </a>\n        </StyledTrackList>\n      ) : (\n        <p className=\"empty-notice\">No artists available</p>\n      )}\n    </>\n  );\n};\n\nexport default Playlist;\n","/Users/ty/projects/curadio/client/src/pages/Start.js",[],[],"/Users/ty/projects/curadio/client/src/pages/Login.js",["127","128"],[],"import styled from 'styled-components/macro'\nimport * as React from \"react\"\nimport spotify1 from '../styles/assets/spotify.gif'\nimport { Header } from '../components'\nimport { Link } from 'react-router-dom'\n\n\nconst StyledLoginContainer = styled.main`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 87.5vh;\n  background-color: #000;\n  justify-content: space-evenly;\n  align-items: center;\n`\n\nconst StyledHeadline = styled.h1`\n    color: white;\n    margin-bottom: 5px;\n    line-height: 58px;\n    font-size: 60px;\n    padding: 50px;\n`\n\nconst StyledSubHeadline = styled.h1`\n    color: silver;\n    margin-bottom: 8px;\n    margin-top: 15px;\n    margin-left: 1px;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 19px;\n`\n\nconst StyledLoginButton = styled.a`\n  line-height: 15px;\n  display: inline-block;\n  background-color: #ff4f12;\n  color: var(--white);\n  border-radius: 10px;\n  font-weight: 7 00;\n  font-family: Inter, Arial;\n  font-size: 1rem;\n  letter-spacing: 0.1px;\n  padding: var(--spacing-sm) var(--spacing-xl);\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    filter: brightness(1.1);\n  }\n`\n\nconst StyledGif = styled.div`\n    margin-right: 20px;\n`\n\n\nconst Login = () => {\n  return (\n    <>\n      <Header/> \n      <StyledLoginContainer>\n          <StyledHeadline>\n              Enjoy music tailored to your taste\n              <StyledSubHeadline>\n              Curated content tailor for you, made for you, just for you                \n              </StyledSubHeadline>  \n                <StyledLoginButton href=\"http://localhost:8888/login\">\n                    Login\n                </StyledLoginButton>\n          </StyledHeadline>\n          <StyledGif>\n              <img  src={spotify1} />\n          </StyledGif>\n      </StyledLoginContainer>\n    </>\n  )\n}\n\nexport default Login;","/Users/ty/projects/curadio/client/src/pages/Form.js",["129"],[],"import styled from \"styled-components/macro\";\nimport { Header } from \"../components\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { getTrack } from \"../spotify\";\nimport { useEffect } from \"react\";\nimport Playlist from \"../components/Playlist\";\n\nconst Input = styled.input`\n  &:focus {\n    outline: none;\n  }\n  color: white;\n  font-size: 1em;\n  border: 1px;\n  background-color: black;\n  border-bottom: 1px solid grey;\n  width: 570px;\n\n  margin-top: 100px;\n  margin-bottom: 20px;\n  padding-left: 0px;\n  padding-bottom: 15px;\n`;\n\nconst StartContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 87.5vh;\n  background-color: #000;\n  /* justify-content: space-evenly; */\n  align-items: center;\n`;\nconst StyledHeadline = styled.div`\n  color: white;\n  line-height: 58px;\n  font-size: 60px;\n  padding: 5px;\n  font-size: 50px;\n`;\nconst StyledOkButton = styled.a`\n  line-height: 15px;\n  margin-right: 490px;\n  margin-top: 10px;\n  display: inline-block;\n  background-color: #603dd3;\n  color: var(--white);\n  border-radius: 10px;\n  font-weight: 7 00;\n  font-family: Inter, Arial;\n  font-size: 1rem;\n  letter-spacing: 0.1px;\n  padding: var(--spacing-sm) var(--spacing-xl);\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    filter: brightness(1.1);\n  }\n`;\nconst StyledFinishButton = styled.a`\n  line-height: 15px;\n  margin-right: 10px;\n  margin-top: 10px;\n  display: inline-block;\n  background-color: #603dd3;\n  color: var(--white);\n  border-radius: 10px;\n  font-weight: 7 00;\n  font-family: Inter, Arial;\n  font-size: 1rem;\n  letter-spacing: 0.1px;\n  padding: var(--spacing-sm) var(--spacing-xl);\n  margin-top: 140px;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    filter: brightness(1.1);\n  }\n`;\nconst StyledTitle = styled.h1`\n  margin-bottom: 5%;\n  margin-right: 4%;\n`\n\nconst questions = [\n  \"How are you feeling today?\",\n  \"What type of music you feel like listening to?\",\n  \"What activity are currently doing?\",\n];\n\nlet userResponse = \"\";\nlet current_question = 0;\n\nlet arr = [];\n\nconst Forms = () => {\n  const [question, setQuestion] = useState(questions[current_question]);\n  const [userInput, setUserInput] = useState(\"\");\n  const [endQuestions, setEndQuestions] = useState(false);\n  const [sendRequest, setSendRequesst] = useState(false);\n  const [songs, setSongs] = useState();\n\n  \n  // Parse songs from GPT Response\n  const parseSongs = (listOfSongs) => {\n    let songs = {};\n    let data = JSON.stringify(listOfSongs);\n\n    // Need to JSON.parse twice to get object\n    let song_dict = JSON.parse(JSON.parse(data));\n\n    for (let [artist, song] of Object.entries(song_dict)) {\n      songs[artist] = song;\n    }\n    return songs;\n  };\n\n  // Takes in object of songs {artistName, songName} and\n  // returns songs assets {artisstImage, trackName, artistName}\n  useEffect(() => {\n    const getSongsAssets = async (songs) => {\n      let data = null;\n      let counter = 0;\n      const searchLimit = 9;\n      const songAssets = [];\n\n      // Calls Spotify API to get song assets\n      for (let [artist, song] of Object.entries(songs)) {\n        if (counter === searchLimit) {\n          break;\n        } else {\n          counter++;\n          let track_query = song + \" \" + artist;\n          data = await getTrack(track_query);\n          // console.log('DATA', data)\n          songAssets.push(data);\n        }\n      }\n      return songAssets;\n    };\n\n    if (sendRequest) {\n      const body = JSON.stringify({ userInput: userResponse });\n\n      // Call backend to generate respsonse from OpenAI API\n      axios.post(\"http://localhost:8888/generate\", body).then(async (res) => {\n        // Returns a object of songs: {\"song_name\", \"artist_name\"}\n        const songs = parseSongs(res.data.output.text);\n        console.log('SONGS:', songs)\n\n        try {\n          let songAssets = await getSongsAssets(songs);\n          setSongs(songAssets);\n          console.log(songAssets);\n        } catch (error) {\n          console.error(`Failed to get SongAssets from Spotify: ${error}`);\n        }\n      });\n    }\n  }, [sendRequest]);\n\n  // Onclick function to reload next question\n  const nextQuestion = () => {\n    current_question++;\n    if (current_question === questions.length) {\n      setEndQuestions(true);\n    }\n\n    setQuestion(questions[current_question]);\n    userResponse += ` ${userInput.toString()}`;\n  };\n\n  const onUserChangedText = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  return (\n    <>\n      <Header />\n      <StartContainer>\n        {songs ? (\n          <>\n            <StyledTitle>Enjoy the tunes 😍</StyledTitle>\n            <Playlist artists={songs} />\n          </>\n        ) : (\n          <>\n            {endQuestions ? (\n              <>\n                <StyledHeadline>Ready!</StyledHeadline>\n                <StyledFinishButton onClick={() => setSendRequesst(true)}>\n                  Get Playlist\n                </StyledFinishButton>\n              </>\n            ) : (\n              <>\n                <StyledHeadline>{question}</StyledHeadline>\n                <Input placeholder=\"Type here\" onChange={onUserChangedText} />\n                <StyledOkButton onClick={nextQuestion}>Ok</StyledOkButton>\n              </>\n            )}\n          </>\n        )}\n      </StartContainer>\n    </>\n  );\n};\n\nexport default Forms;\n","/Users/ty/projects/curadio/client/src/pages/Home.js",["130"],[],"import styled from 'styled-components/macro'\nimport * as React from \"react\"\nimport spotify1 from '../styles/assets/spotify.gif'\nimport { Header } from '../components'\nimport { Link } from 'react-router-dom'\n\n\nconst StyledLoginContainer = styled.main`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 88vh;\n  background-color: #000;\n  justify-content: space-evenly;\n  align-items: center;\n`\n\nconst StyledHeadline = styled.h1`\n    color: white;\n    margin-bottom: 5px;\n    line-height: 58px;\n    font-size: 60px;\n    padding: 50px;\n`\n\nconst StyledSubHeadline = styled.h1`\n    color: silver;\n    margin-bottom: 8px;\n    margin-top: 15px;\n    margin-left: 1px;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 19px;\n`\n\nconst StyledLoginButton = styled.a`\n  line-height: 15px;\n  display: inline-block;\n  background-color: #ff4f12;\n  color: var(--white);\n  border-radius: 10px;\n  font-weight: 7 00;\n  font-family: Inter, Arial;\n  font-size: 1rem;\n  letter-spacing: 0.1px;\n  padding: var(--spacing-sm) var(--spacing-xl);\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    filter: brightness(1.1);\n  }\n`\n\nconst StyledGif = styled.div`\n    margin-right: 20px;\n`\n\n\nconst Home = () => {\n  return (\n    <>\n      <Header/> \n      <StyledLoginContainer>\n          <StyledHeadline>\n              Enjoy music tailored to your taste\n              <StyledSubHeadline>\n              Curated content tailor for you, made for you, just for you                \n              </StyledSubHeadline>  \n              {/* href=\"http://localhost:8888/login\" */}\n                <Link to=\"/start\">\n                  <StyledLoginButton>\n                      Get Started\n                  </StyledLoginButton>\n                </Link>                          \n          </StyledHeadline>\n          <StyledGif>\n              <img  src={spotify1} />\n          </StyledGif>\n      </StyledLoginContainer>\n    </>\n  )\n}\n\nexport default Home;","/Users/ty/projects/curadio/client/src/styles/StyledGrid.js",[],[],"/Users/ty/projects/curadio/client/src/styles/GlobalStyle.js",[],[],"/Users/ty/projects/curadio/client/src/styles/StyledSection.js",[],[],"/Users/ty/projects/curadio/client/src/styles/StyledHeader.js",[],[],"/Users/ty/projects/curadio/client/src/styles/StyledTrackList.js",[],[],"/Users/ty/projects/curadio/client/src/components/index.js",[],[],"/Users/ty/projects/curadio/client/src/styles/fonts.js",[],[],"/Users/ty/projects/curadio/client/src/styles/variables.js",[],[],"/Users/ty/projects/curadio/client/src/components/SectionWrapper.js",[],[],"/Users/ty/projects/curadio/client/src/components/Header.js",[],[],{"ruleId":"131","severity":1,"message":"132","line":47,"column":10,"nodeType":"133","messageId":"134","endLine":47,"endColumn":17},{"ruleId":"131","severity":1,"message":"135","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":16},{"ruleId":"131","severity":1,"message":"136","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":14,"column":24,"nodeType":"139","messageId":"140","endLine":14,"endColumn":26},{"ruleId":"131","severity":1,"message":"141","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":76,"column":15,"nodeType":"144","endLine":76,"endColumn":38},{"ruleId":"131","severity":1,"message":"145","line":99,"column":5,"nodeType":"133","messageId":"134","endLine":99,"endColumn":8},{"ruleId":"142","severity":1,"message":"143","line":79,"column":15,"nodeType":"144","endLine":79,"endColumn":38},"no-unused-vars","'profile' is assigned a value but never used.","Identifier","unusedVar","'Playlist' is defined but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'arr' is assigned a value but never used."]