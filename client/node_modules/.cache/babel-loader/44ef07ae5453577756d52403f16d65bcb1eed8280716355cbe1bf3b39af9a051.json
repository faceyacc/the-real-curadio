{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/ty/projects/curio/client/src/pages/Form.js\",\n  _s = $RefreshSig$();\nimport { Header } from '../components';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { getTrack } from '../spotify';\nimport { useEffect } from 'react';\n\n// import { useNavigate } from 'react-router-dom'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = _styled.input.withConfig({\n  displayName: \"Form__Input\",\n  componentId: \"sc-1ljs4gr-0\"\n})([\"&:focus{outline:none;};color:white;font-size:1em;border:1px;background-color:black;border-bottom:1px solid grey;width:570px;margin-top:100px;margin-bottom:20px;padding-left:0px;padding-bottom:15px;\"]);\n_c = Input;\nconst StartContainer = _styled.main.withConfig({\n  displayName: \"Form__StartContainer\",\n  componentId: \"sc-1ljs4gr-1\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;height:87.5vh;background-color:#000;align-items:center;\"]);\n_c2 = StartContainer;\nconst StyledHeadline = _styled.h1.withConfig({\n  displayName: \"Form__StyledHeadline\",\n  componentId: \"sc-1ljs4gr-2\"\n})([\"color:white;line-height:58px;font-size:60px;padding:5px;font-size:50px;\"]);\n_c3 = StyledHeadline;\nconst StyledOkButton = _styled.a.withConfig({\n  displayName: \"Form__StyledOkButton\",\n  componentId: \"sc-1ljs4gr-3\"\n})([\"line-height:15px;margin-right:490px;margin-top:10px;display:inline-block;background-color:#603dd3;color:var(--white);border-radius:10px;font-weight:7 00;font-family:Inter,Arial;font-size:1rem;letter-spacing:0.1px;padding:var(--spacing-sm) var(--spacing-xl);&:hover,&:focus{text-decoration:none;filter:brightness(1.1);}\"]);\n_c4 = StyledOkButton;\nconst StyledFinishButton = _styled.a.withConfig({\n  displayName: \"Form__StyledFinishButton\",\n  componentId: \"sc-1ljs4gr-4\"\n})([\"line-height:15px;margin-right:10px;margin-top:10px;display:inline-block;background-color:#603dd3;color:var(--white);border-radius:10px;font-weight:7 00;font-family:Inter,Arial;font-size:1rem;letter-spacing:0.1px;padding:var(--spacing-sm) var(--spacing-xl);margin-top:140px;&:hover,&:focus{text-decoration:none;filter:brightness(1.1);}\"]);\n_c5 = StyledFinishButton;\nconst questions = ['How are you feeling today?', 'What type of music you feel like listening to?', 'What activity are currently doing?'];\nlet userResponse = \"\";\nlet current_question = 0;\nlet arr = [];\nconst Forms = () => {\n  _s();\n  const [question, setQuestion] = useState(questions[current_question]);\n  const [userInput, setUserInput] = useState('');\n  const [endQuestions, setEndQuestions] = useState(false);\n  const [sendRequest, setSendRequesst] = useState(false);\n  const [artist, setArtist] = useState(null);\n\n  // let navigate = useNavigate()\n\n  // Helper Function\n  // Parse songs from GPT Response\n  const parseSongs = listOfSongs => {\n    let songs = {};\n    let data = JSON.stringify(listOfSongs);\n\n    // Need to JSON.parse twice to get object\n    let song_dict = JSON.parse(JSON.parse(data));\n    for (let [artist, song] of Object.entries(song_dict)) {\n      songs[artist] = song;\n    }\n    return songs;\n  };\n\n  // Helper Function\n  // Takes in object of songs {artistName, songName} and\n  // returns songs assets {artisstImage, trackName, artistName}\n\n  const getSongsAssets = async songs => {\n    let counter = 0;\n    const searchLimit = 5;\n    const songAssets = [];\n\n    // Calls Spotify API to get song assets\n    for (let [artist, song] of Object.entries(songs)) {\n      if (counter == searchLimit) {\n        break;\n      } else {\n        let track_query = song + ' ' + artist;\n        try {\n          const {\n            data\n          } = await getTrack(track_query);\n          const artist_image = data.tracks.items[0].album.images[1].url;\n          const track_name = data.tracks.items[0].name;\n          const artist_name = data.tracks.items[0].artists[0].name;\n          const asset = {\n            image: artist_image,\n            track_name: track_name,\n            artist_name: artist_name\n          };\n          console.log(asset);\n          songAssets.push({\n            asset\n          });\n          counter++;\n        } catch (error) {\n          console.log(`SOMETHING WENT WRONG HERE!!!!!!! ${error}`);\n        }\n      }\n      return songAssets;\n    }\n  };\n  useEffect(() => {\n    if (sendRequest) {\n      const body = JSON.stringify({\n        userInput: userResponse\n      });\n\n      // Call backend to generate respsonse from OpenAI API\n      axios.post('http://localhost:8888/generate', body).then(async res => {\n        // Returns a object of songs: {\"song_name\", \"artist_name\"}\n        const songs = parseSongs(res.data.output.text);\n        console.log(songs);\n        let songAssets = await getSongsAssets(songs);\n        console.log(songAssets);\n        setArtist(songAssets);\n      });\n    }\n  }, [sendRequest]);\n\n  // Onclick function to reload next question\n  const nextQuestion = () => {\n    current_question++;\n    if (current_question === questions.length) {\n      setEndQuestions(true);\n    }\n    setQuestion(questions[current_question]);\n    userResponse += ` ${userInput.toString()}`;\n  };\n  const onUserChangedText = event => {\n    setUserInput(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StartContainer, {\n      children: endQuestions ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StyledHeadline, {\n          children: \"Ready!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(StyledFinishButton, {\n          onClick: () => setSendRequesst(true),\n          children: \"Get Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StyledHeadline, {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Type here\",\n          onChange: onUserChangedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(StyledOkButton, {\n          onClick: nextQuestion,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Forms, \"lrz+MNpSxKCZuh6jXchjPYtpNwM=\");\n_c6 = Forms;\nexport default Forms;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"StartContainer\");\n$RefreshReg$(_c3, \"StyledHeadline\");\n$RefreshReg$(_c4, \"StyledOkButton\");\n$RefreshReg$(_c5, \"StyledFinishButton\");\n$RefreshReg$(_c6, \"Forms\");","map":{"version":3,"names":["Header","React","useState","axios","getTrack","useEffect","Input","styled","input","StartContainer","main","StyledHeadline","h1","StyledOkButton","a","StyledFinishButton","questions","userResponse","current_question","arr","Forms","question","setQuestion","userInput","setUserInput","endQuestions","setEndQuestions","sendRequest","setSendRequesst","artist","setArtist","parseSongs","listOfSongs","songs","data","JSON","stringify","song_dict","parse","song","Object","entries","getSongsAssets","counter","searchLimit","songAssets","track_query","artist_image","tracks","items","album","images","url","track_name","name","artist_name","artists","asset","image","console","log","push","error","body","post","then","res","output","text","nextQuestion","length","toString","onUserChangedText","event","target","value"],"sources":["/Users/ty/projects/curio/client/src/pages/Form.js"],"sourcesContent":["import styled from 'styled-components/macro'\nimport { Header } from '../components'\nimport * as React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios'\nimport { getTrack } from '../spotify'\nimport { useEffect } from 'react';\n\n// import { useNavigate } from 'react-router-dom'\n\nconst Input = styled.input`\n    &:focus {\n      outline: none;\n    };\n    color: white;\n    font-size: 1em;\n    border: 1px;\n    background-color: black;\n    border-bottom: 1px solid grey;\n    width: 570px;\n    \n    margin-top: 100px;\n    margin-bottom: 20px;\n    padding-left: 0px;\n    padding-bottom: 15px;\n`\n\nconst StartContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 87.5vh;\n  background-color: #000;\n  /* justify-content: space-evenly; */\n  align-items: center;\n`\nconst StyledHeadline = styled.h1`\n    color: white;\n    line-height: 58px;\n    font-size: 60px;\n    padding: 5px;\n    font-size: 50px;\n\n`\nconst StyledOkButton = styled.a`\n  line-height: 15px;\n  margin-right: 490px;\n  margin-top: 10px;\n  display: inline-block;\n  background-color: #603dd3;\n  color: var(--white);\n  border-radius: 10px;\n  font-weight: 7 00;\n  font-family: Inter, Arial;\n  font-size: 1rem;\n  letter-spacing: 0.1px;\n  padding: var(--spacing-sm) var(--spacing-xl);\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    filter: brightness(1.1);\n  }\n`\nconst StyledFinishButton = styled.a`\n  line-height: 15px;\n  margin-right: 10px;\n  margin-top: 10px;\n  display: inline-block;\n  background-color: #603dd3;\n  color: var(--white);\n  border-radius: 10px;\n  font-weight: 7 00;\n  font-family: Inter, Arial;\n  font-size: 1rem;\n  letter-spacing: 0.1px;\n  padding: var(--spacing-sm) var(--spacing-xl);\n  margin-top: 140px;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    filter: brightness(1.1);\n  }\n`\n\nconst questions = ['How are you feeling today?', \n                   'What type of music you feel like listening to?',\n                   'What activity are currently doing?']\n\nlet userResponse = \"\"                   \nlet current_question = 0\n\nlet arr = []\n\nconst Forms = () => {\n    const [question, setQuestion] = useState(questions[current_question])\n    const [userInput, setUserInput] = useState('')\n    const [endQuestions, setEndQuestions] = useState(false)\n    const [sendRequest, setSendRequesst] = useState(false)\n    const [artist, setArtist] = useState(null)\n\n    // let navigate = useNavigate()\n\n    // Helper Function\n    // Parse songs from GPT Response\n    const parseSongs = (listOfSongs) => {\n      let songs = {}\n      let data = JSON.stringify(listOfSongs)\n\n      // Need to JSON.parse twice to get object\n      let song_dict = JSON.parse(JSON.parse(data))\n\n      for (let [artist, song] of Object.entries(song_dict)) {\n        songs[artist] = song\n      }\n      return songs\n    }\n\n\n    // Helper Function\n    // Takes in object of songs {artistName, songName} and\n    // returns songs assets {artisstImage, trackName, artistName}\n\n    const getSongsAssets = async (songs) => {\n      let counter = 0;\n      const searchLimit = 5\n      const songAssets = []\n\n      // Calls Spotify API to get song assets\n      for(let [artist, song] of Object.entries(songs)) {\n        if (counter == searchLimit) {\n          break\n        } else {\n            \n            let track_query = song + ' ' + artist\n\n            try {\n              const { data } = await getTrack(track_query)\n              const artist_image = data.tracks.items[0].album.images[1].url\n              const track_name = data.tracks.items[0].name\n              const artist_name = data.tracks.items[0].artists[0].name\n  \n              const asset = {\n                image: artist_image,\n                track_name: track_name,\n                artist_name: artist_name\n              }\n                   \n              console.log(asset)\n\n              songAssets.push({ asset })\n              counter++\n            } catch (error) {\n              console.log(`SOMETHING WENT WRONG HERE!!!!!!! ${error}`)\n            }\n          }\n\n          return songAssets\n      }\n    }\n\n\n    \n    useEffect(() => {\n      if (sendRequest) {  \n        const body = JSON.stringify({ userInput: userResponse })\n      \n        // Call backend to generate respsonse from OpenAI API\n        axios.post('http://localhost:8888/generate', body)\n          .then(async (res) => {\n            \n            // Returns a object of songs: {\"song_name\", \"artist_name\"}\n            const songs = parseSongs(res.data.output.text)\n            console.log(songs)\n            \n            let songAssets = await getSongsAssets(songs) \n            console.log(songAssets)\n            setArtist(songAssets)\n            \n        })\n      }\n    },[sendRequest])\n\n\n    // Onclick function to reload next question\n    const nextQuestion = () => {\n      current_question++\n      if (current_question === questions.length) { \n        setEndQuestions(true)\n      }\n\n      setQuestion(questions[current_question])\n      userResponse += ` ${userInput.toString()}`\n      \n      \n    }\n\n    const onUserChangedText = (event) => {\n      setUserInput(event.target.value)     \n    }\n    \n\n    return (\n        <>\n            <Header/>\n            <StartContainer>\n              {endQuestions ? \n              <>\n                <StyledHeadline>Ready!</StyledHeadline>\n                <StyledFinishButton onClick={() => setSendRequesst(true)}>\n                  Get Playlist\n                </StyledFinishButton>\n              </> \n              : \n              <>\n                <StyledHeadline>{question}</StyledHeadline>\n                <Input placeholder=\"Type here\" onChange={onUserChangedText}/>\n                <StyledOkButton onClick={nextQuestion}>\n                  Ok\n                </StyledOkButton>\n              </>}               \n            </StartContainer>\n            \n        </>\n    )\n}\n\nexport default Forms"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}