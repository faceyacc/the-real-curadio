{"ast":null,"code":"/**\n * Higher-order function for async/await error handling\n * @param {function} fn an async function\n * @returns {function}\n */export var catchErrors=function catchErrors(fn){return function(){return fn.apply(void 0,arguments).catch(function(err){console.error(err);});};};","map":{"version":3,"names":["catchErrors","fn","apply","arguments","catch","err","console","error"],"sources":["/Users/ty/projects/curadio/client/src/utils.js"],"sourcesContent":["/**\n * Higher-order function for async/await error handling\n * @param {function} fn an async function\n * @returns {function}\n */\nexport const catchErrors = fn => {\n    return function(...args) {\n      return fn(...args).catch((err) => {\n        console.error(err);\n      })\n    }\n  }"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAA,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAGC,EAAE,CAAI,CAC7B,MAAO,WAAkB,CACvB,MAAO,CAAAA,EAAE,CAAAC,KAAA,QAAAC,SAAA,CAAS,CAACC,KAAK,CAAC,SAACC,GAAG,CAAK,CAChCC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}