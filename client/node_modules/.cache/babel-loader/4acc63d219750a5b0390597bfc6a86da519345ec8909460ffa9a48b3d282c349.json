{"ast":null,"code":"var _jsxFileName = \"/Users/ty/projects/curio/client/src/components/Playlist.js\";\nimport { StyledGrid } from \"../styles\";\nimport { StyledTrackList } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Playlist = _ref => {\n  let {\n    artists\n  } = _ref;\n  console.log(artists[0].data.tracks.items[0].name);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: artists ? /*#__PURE__*/_jsxDEV(StyledTrackList, {\n      children: artists.map((artist, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"track__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track__item__num\",\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track__item__title-group\",\n          children: [artist.data.tracks.items[0].album.images.length && artist.data.tracks.items[0].album.images[2] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__item__img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: artist.data.tracks.items[0].album.images[2].url,\n              alt: \"track not available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__item__name-artist\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track__item__name track__item__artist\",\n              children: artist.data.tracks.items[0].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track__item__artist overflow-ellipsis\",\n              children: artists.map((artist, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [artist.data.tracks.items[0].artists[0].name, i !== artist.data.tracks.items[0].artists.length - 1 && ', ']\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track__item__album overflow-ellipsis\",\n          children: artist.data.tracks.items[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-notice\",\n      children: \"No artists available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["StyledGrid","StyledTrackList","Playlist","artists","console","log","data","tracks","items","name","map","artist","i","album","images","length","url"],"sources":["/Users/ty/projects/curio/client/src/components/Playlist.js"],"sourcesContent":["import { StyledGrid } from \"../styles\";\nimport { StyledTrackList } from '../styles';\n\n\nconst Playlist = ({ artists }) => {\n  console.log(artists[0].data.tracks.items[0].name);\n  return (\n    <>\n      {artists ? (\n        <StyledTrackList>\n        {artists.map((artist, i) => (\n          <li className=\"track__item\" key={i}>\n            <div className=\"track__item__num\">{i + 1}</div>\n            <div className=\"track__item__title-group\">\n              {artist.data.tracks.items[0].album.images.length && artist.data.tracks.items[0].album.images[2] && (\n                <div className=\"track__item__img\">\n                  <img src={artist.data.tracks.items[0].album.images[2].url} alt=\"track not available\" />\n                </div>\n              )}\n              <div className=\"track__item__name-artist\">\n                <div className=\"track__item__name track__item__artist\">\n                  {artist.data.tracks.items[0].name}\n                </div>\n                <div className=\"track__item__artist overflow-ellipsis\">\n                  {artists.map((artist, i) => (\n                    <span key={i}>\n                      {artist.data.tracks.items[0].artists[0].name}{i !== artist.data.tracks.items[0].artists.length - 1 && ', '}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n            <div className=\"track__item__album overflow-ellipsis\">\n\t\t\t\t\t\t\t{artist.data.tracks.items[0].name}\n            </div>\n          </li>\n        ))}\n      </StyledTrackList>\n      ) : (\n        <p className=\"empty-notice\">No artists available</p>\n      )}\n    </>\n  );\n};\n\nexport default Playlist;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,WAAW;AACtC,SAASC,eAAe,QAAQ,WAAW;AAAC;AAAA;AAG5C,MAAMC,QAAQ,GAAG,QAAiB;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC3BC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,CAAC,CAAC,CAACG,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;EACjD,oBACE;IAAA,UACGN,OAAO,gBACN,QAAC,eAAe;MAAA,UACfA,OAAO,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBACrB;QAAI,SAAS,EAAC,aAAa;QAAA,wBACzB;UAAK,SAAS,EAAC,kBAAkB;UAAA,UAAEA,CAAC,GAAG;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO,eAC/C;UAAK,SAAS,EAAC,0BAA0B;UAAA,WACtCD,MAAM,CAACL,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACK,KAAK,CAACC,MAAM,CAACC,MAAM,IAAIJ,MAAM,CAACL,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACK,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,iBAC7F;YAAK,SAAS,EAAC,kBAAkB;YAAA,uBAC/B;cAAK,GAAG,EAAEH,MAAM,CAACL,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACK,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACE,GAAI;cAAC,GAAG,EAAC;YAAqB;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAE1F,eACD;YAAK,SAAS,EAAC,0BAA0B;YAAA,wBACvC;cAAK,SAAS,EAAC,uCAAuC;cAAA,UACnDL,MAAM,CAACL,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC;YAAI;cAAA;cAAA;cAAA;YAAA,QAC7B,eACN;cAAK,SAAS,EAAC,uCAAuC;cAAA,UACnDN,OAAO,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBACrB;gBAAA,WACGD,MAAM,CAACL,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACL,OAAO,CAAC,CAAC,CAAC,CAACM,IAAI,EAAEG,CAAC,KAAKD,MAAM,CAACL,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACL,OAAO,CAACY,MAAM,GAAG,CAAC,IAAI,IAAI;cAAA,GADjGH,CAAC;gBAAA;gBAAA;gBAAA;cAAA,QAGb;YAAC;cAAA;cAAA;cAAA;YAAA,QACE;UAAA;YAAA;YAAA;YAAA;UAAA,QACF;QAAA;UAAA;UAAA;UAAA;QAAA,QACF,eACN;UAAK,SAAS,EAAC,sCAAsC;UAAA,UACzDD,MAAM,CAACL,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QACtB;MAAA,GAvByBG,CAAC;QAAA;QAAA;QAAA;MAAA,QAyBnC;IAAC;MAAA;MAAA;MAAA;IAAA,QACc,gBAEhB;MAAG,SAAS,EAAC,cAAc;MAAA,UAAC;IAAoB;MAAA;MAAA;MAAA;IAAA;EACjD,iBACA;AAEP,CAAC;AAAC,KAvCIV,QAAQ;AAyCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}