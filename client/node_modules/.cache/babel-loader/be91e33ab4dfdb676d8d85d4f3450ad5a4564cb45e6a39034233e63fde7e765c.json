{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/ty/projects/curio/client/src/pages/Playlist.js\",\n  _s = $RefreshSig$();\nimport { Header } from '../components';\nimport { generateActiongenerate } from '../generate';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StartContainer = _styled.main.withConfig({\n  displayName: \"Playlist__StartContainer\",\n  componentId: \"sc-nz3ag9-0\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;height:87.5vh;background-color:#000;align-items:center;\"]);\n_c = StartContainer;\nconst StyledHeadline = _styled.h1.withConfig({\n  displayName: \"Playlist__StyledHeadline\",\n  componentId: \"sc-nz3ag9-1\"\n})([\"color:white;line-height:58px;font-size:60px;padding:5px;font-size:50px;\"]);\n_c2 = StyledHeadline;\nconst StyledSubHeadline = _styled.h1.withConfig({\n  displayName: \"Playlist__StyledSubHeadline\",\n  componentId: \"sc-nz3ag9-2\"\n})([\"color:silver;margin-bottom:50px;margin-left:1px;font-size:1rem;font-weight:400;line-height:19px;\"]);\nconst StyledLoginButton = _styled.a.withConfig({\n  displayName: \"Playlist__StyledLoginButton\",\n  componentId: \"sc-nz3ag9-3\"\n})([\"line-height:15px;display:inline-block;background-color:#121bff;color:var(--white);border-radius:10px;font-weight:7 00;font-family:Inter,Arial;font-size:1rem;letter-spacing:0.1px;padding:var(--spacing-sm) var(--spacing-xl);&:hover,&:focus{text-decoration:none;filter:brightness(1.1);}\"]);\nconst Playlist = () => {\n  _s();\n  const [apiOutput, setApiOutput] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const callGenerateEndpoint = async () => {\n    // setIsGenerating(true)\n    // setSubtitle(false)\n\n    console.log(\"Calling OpenAI...\");\n\n    // Make POST to the generate API\n    const response = await fetch('/api/generate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userInput\n      }) // Pass in user's prompt\n    });\n\n    const data = await response.json();\n    const {\n      output\n    } = data;\n    console.log(\"OpenAI replied...\", output.text);\n    setApiOutput(`${output.text}`); // Fetch Chat-GPT's response\n    // setIsGenerating(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StartContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledHeadline, {\n        children: \"Show playlist here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Playlist, \"uQWHTh3YJ1LzED6kepzzvugZWWo=\");\n_c3 = Playlist;\nexport default Playlist;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StartContainer\");\n$RefreshReg$(_c2, \"StyledHeadline\");\n$RefreshReg$(_c3, \"Playlist\");","map":{"version":3,"names":["Header","generateActiongenerate","useState","StartContainer","styled","main","StyledHeadline","h1","StyledSubHeadline","StyledLoginButton","a","Playlist","apiOutput","setApiOutput","userInput","setUserInput","callGenerateEndpoint","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","output","text"],"sources":["/Users/ty/projects/curio/client/src/pages/Playlist.js"],"sourcesContent":["import styled from 'styled-components/macro'\nimport { Header } from '../components'\nimport { generateActiongenerate } from '../generate'\nimport { useState } from 'react'\n\n\nconst StartContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 87.5vh;\n  background-color: #000;\n  /* justify-content: space-evenly; */\n  align-items: center;\n`\nconst StyledHeadline = styled.h1`\n    color: white;\n    line-height: 58px;\n    font-size: 60px;\n    padding: 5px;\n    font-size: 50px;\n\n`\n\nconst StyledSubHeadline = styled.h1`\n    color: silver;\n    margin-bottom: 50px;\n    margin-left: 1px;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 19px;    \n`\n\nconst StyledLoginButton = styled.a`\n  line-height: 15px;\n  display: inline-block;\n  background-color: #121bff;\n  color: var(--white);\n  border-radius: 10px;\n  font-weight: 7 00;\n  font-family: Inter, Arial;\n  font-size: 1rem;\n  letter-spacing: 0.1px;\n  padding: var(--spacing-sm) var(--spacing-xl);\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    filter: brightness(1.1);\n  }\n`\n\nconst Playlist = () => {\n    const [apiOutput, setApiOutput] = useState('')\n    const [userInput, setUserInput] = useState('')\n\n    const callGenerateEndpoint = async () => {\n        // setIsGenerating(true)\n        // setSubtitle(false)\n        \n        console.log(\"Calling OpenAI...\")\n    \n        // Make POST to the generate API\n        const response = await fetch('/api/generate', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ userInput }), // Pass in user's prompt\n        })\n    \n        const data = await response.json()\n        const { output } = data\n    \n        console.log(\"OpenAI replied...\", output.text)\n    \n        setApiOutput(`${output.text}`) // Fetch Chat-GPT's response\n        // setIsGenerating(false);\n    }\n\n\n\n\n\n    return (\n        <>\n            <Header/>\n            <StartContainer>\n                <StyledHeadline>Show playlist here</StyledHeadline>\n            </StartContainer>\n        </>\n    )\n}\n\nexport default Playlist"],"mappings":";;;AACA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,sBAAsB,QAAQ,aAAa;AACpD,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAGhC,MAAMC,cAAc,GAAGC,OAAM,CAACC,IAAI;EAAA;EAAA;AAAA,4IASjC;AAAA,KATKF,cAAc;AAUpB,MAAMG,cAAc,GAAGF,OAAM,CAACG,EAAE;EAAA;EAAA;AAAA,+EAO/B;AAAA,MAPKD,cAAc;AASpB,MAAME,iBAAiB,GAAGJ,OAAM,CAACG,EAAE;EAAA;EAAA;AAAA,wGAOlC;AAED,MAAME,iBAAiB,GAAGL,OAAM,CAACM,CAAC;EAAA;EAAA;AAAA,mSAiBjC;AAED,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMc,oBAAoB,GAAG,YAAY;IACrC;IACA;;IAEAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;;IAEhC;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX;MAAU,CAAC,CAAC,CAAE;IACvC,CAAC,CAAC;;IAEF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAClC,MAAM;MAAEC;IAAO,CAAC,GAAGF,IAAI;IAEvBT,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEU,MAAM,CAACC,IAAI,CAAC;IAE7ChB,YAAY,CAAE,GAAEe,MAAM,CAACC,IAAK,EAAC,CAAC,EAAC;IAC/B;EACJ,CAAC;;EAMD,oBACI;IAAA,wBACI,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT,QAAC,cAAc;MAAA,uBACX,QAAC,cAAc;QAAA,UAAC;MAAkB;QAAA;QAAA;QAAA;MAAA;IAAiB;MAAA;MAAA;MAAA;IAAA,QACtC;EAAA,gBAClB;AAEX,CAAC;AAAA,GAxCKlB,QAAQ;AAAA,MAARA,QAAQ;AA0Cd,eAAeA,QAAQ;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}