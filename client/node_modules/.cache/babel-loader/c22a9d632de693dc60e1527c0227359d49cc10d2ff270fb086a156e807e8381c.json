{"ast":null,"code":"var _jsxFileName = \"/Users/ty/projects/curio/client/src/components/Playlist.js\";\nimport { StyledGrid } from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Playlist = _ref => {\n  let {\n    artists\n  } = _ref;\n  console.log(artists[0].data.tracks.items[0].name);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: artists[0].data.tracks.items[0].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), artists.map((artist, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"grid__item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid__item__inner\",\n        children: [artist.data.tracks.items[0].album.images[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item__img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: artist.data.tracks.items[0].album.images[0].url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"grid__item__name overflow-ellipsis\",\n          children: artist.data.tracks.items[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n  // return (\n  //   <>\n  //     {artists && artists.length ? (\n  //       <StyledGrid type=\"artist\">\n  //         {artists.map((artist, i) => (\n  //           <li className=\"grid__item\" key={i}>\n  //             <div className=\"grid__item__inner\">\n  //               {artist.data.tracks.items[0].album.images[0] && (\n  //                 <div className=\"grid__item__img\">\n  //                   <img\n  //                     src={artist.data.tracks.items[0].album.images[0].url}\n  //                     alt={artist.data.tracks.items[0].name}\n  //                   />\n  //                 </div>\n  //               )}\n  //               <h3 className=\"grid__item__name overflow-ellipsis\">\n  //                 {artist.data.tracks.items[0].name}\n  //               </h3>\n  //               <p className=\"grid__item__label\">Artist</p>\n  //             </div>\n  //           </li>\n  //         ))}\n  //       </StyledGrid>\n  //     ) : (\n  //       <p className=\"empty-notice\">No artists available</p>\n  //     )}\n  //   </>\n  // );\n};\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["StyledGrid","Playlist","artists","console","log","data","tracks","items","name","map","artist","i","album","images","url"],"sources":["/Users/ty/projects/curio/client/src/components/Playlist.js"],"sourcesContent":["import { StyledGrid } from \"../styles\";\n\nconst Playlist = ({ artists }) => {\n  console.log(artists[0].data.tracks.items[0].name);\n  return (\n    <>\n      <h1>{artists[0].data.tracks.items[0].name}</h1>\n      {artists.map((artist, i) => (\n        <li className=\"grid__item\" key={i}>\n          <div className=\"grid__item__inner\">\n            {artist.data.tracks.items[0].album.images[0] && (\n              <div className=\"grid__item__img\">\n                <img \n                  src={artist.data.tracks.items[0].album.images[0].url}\n                />\n              </div>\n            )}\n            <h3 className=\"grid__item__name overflow-ellipsis\">\n              {artist.data.tracks.items[0].name}\n            </h3>\n          </div>\n        </li>\n      ))}\n    </>\n  );\n  // return (\n  //   <>\n  //     {artists && artists.length ? (\n  //       <StyledGrid type=\"artist\">\n  //         {artists.map((artist, i) => (\n  //           <li className=\"grid__item\" key={i}>\n  //             <div className=\"grid__item__inner\">\n  //               {artist.data.tracks.items[0].album.images[0] && (\n  //                 <div className=\"grid__item__img\">\n  //                   <img\n  //                     src={artist.data.tracks.items[0].album.images[0].url}\n  //                     alt={artist.data.tracks.items[0].name}\n  //                   />\n  //                 </div>\n  //               )}\n  //               <h3 className=\"grid__item__name overflow-ellipsis\">\n  //                 {artist.data.tracks.items[0].name}\n  //               </h3>\n  //               <p className=\"grid__item__label\">Artist</p>\n  //             </div>\n  //           </li>\n  //         ))}\n  //       </StyledGrid>\n  //     ) : (\n  //       <p className=\"empty-notice\">No artists available</p>\n  //     )}\n  //   </>\n  // );\n};\n\nexport default Playlist;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,WAAW;AAAC;AAAA;AAEvC,MAAMC,QAAQ,GAAG,QAAiB;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC3BC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,CAAC,CAAC,CAACG,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;EACjD,oBACE;IAAA,wBACE;MAAA,UAAKN,OAAO,CAAC,CAAC,CAAC,CAACG,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,EAC9CN,OAAO,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBACrB;MAAI,SAAS,EAAC,YAAY;MAAA,uBACxB;QAAK,SAAS,EAAC,mBAAmB;QAAA,WAC/BD,MAAM,CAACL,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACK,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,iBAC1C;UAAK,SAAS,EAAC,iBAAiB;UAAA,uBAC9B;YACE,GAAG,EAAEH,MAAM,CAACL,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACK,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC;UAAI;YAAA;YAAA;YAAA;UAAA;QACrD;UAAA;UAAA;UAAA;QAAA,QAEL,eACD;UAAI,SAAS,EAAC,oCAAoC;UAAA,UAC/CJ,MAAM,CAACL,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QAC9B;MAAA;QAAA;QAAA;QAAA;MAAA;IACD,GAZwBG,CAAC;MAAA;MAAA;MAAA;IAAA,QAclC,CAAC;EAAA,gBACD;EAEL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAC,KAnDIV,QAAQ;AAqDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}